# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: PiggyBank Project CI/CD with Maven
on:
  push:
    branches: [ version-with-oauth2, master ]
  pull_request:
    branches: [ version-with-oauth2, master ]
jobs:

  test-host:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: vikkidchamp
        ports:
          - 32574:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port 32574 -uroot -pvikkidchamp -e "SHOW DATABASES"
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: fetch repository content
      - uses: actions/setup-java@v1
        name: Set up JDK 11.0.8 for x64
        with:
          java-version: '11.0.8'
          architecture: x64
      - name: Cache/Restore cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build and Test with Maven
        run: |
          mvn -B package --file pom.xml -Dspring.profiles.active=test
          mkdir staging
          cp target/*.jar staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
#  deploy:
#    runs-on: ubuntu-latest
#    needs: [ build-test ]
#    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
#    steps:
#      - uses: actions/checkout@v1
#      - name: Download built package from build-test job
#        uses: actions/download-artifact@v2
#        with:
#          name: Package
#      - name: Deploy artifact if pushed to master and previous job [build-test] was successful
#        run: |
#          pwd
#          ls
#          echo "$SECRET" > ./secretfile
#          cat ./secretfile
#        env:
#          SECRET: ${{ secrets.SECRET }} # url to ec2 instance e.g blahblah.com